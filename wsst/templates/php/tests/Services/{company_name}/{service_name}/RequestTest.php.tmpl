<?php

/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */

/**
 * Test case for the class "<%[$package_name]%>_Request"
 *
 * PHP versions 5
<%[ if ($php_license_abstract) {
    $OUT .= " *\n";
    $php_license_abstract =~ s/^\s+//;
    $php_license_abstract =~ s/\s+$//;
    $php_license_abstract =~ s/\n/\n * /g;
    $OUT .= " * LICENSE: $php_license_abstract\n";
} ]%> *
 * @category   Services
 * @package    <%[$package_name]%>
<%[ foreach (@author) {
    $OUT .= " * \@author     $_\n";
} ]%><%[ if ($php_copyright||$copyright) {
    local $copyright = ($php_copyright||$copyright);
    $OUT .= " * \@copyright  $copyright\n";
} ]%> * @license    <%[$php_license_uri]%> <%[$license]%>
 * @version    Release: @package_version@
 * @link       <%[$php_link]%>
 */

require_once 'PEAR.php';
require_once 'PHPUnit/Framework.php';
require_once '<%[$package_dir]%>/Factory.php';
require_once '<%[$package_dir]%>/Request.php';

/**
 * Test class for <%[$package_name]%>_Request
 *
 * @category   Services
 * @package    <%[$package_name]%>
<%[ foreach (@author) {
    $OUT .= " * \@author     $_\n";
} ]%><%[ if ($php_copyright||$copyright) {
    local $copyright = ($php_copyright||$copyright);
    $OUT .= " * \@copyright  $copyright\n";
} ]%> * @license    <%[$php_license_uri]%> <%[$license]%>
 * @version    Release: @package_version@
 * @link       <%[$php_link]%>
 */
class <%[$package_name]%>_RequestTest extends PHPUnit_Framework_TestCase
{
    protected $factory;

    public function setUp()
    {
        $this->factory = new <%[$package_name]%>_Factory();
    }

    public function testNew()
    {
        $obj =& $this->factory->createRequest();
        $this->assertNotNull($obj);
    }

    public function testGetSetUrl()
    {
        $obj =& $this->factory->createRequest();
        $this->assertNull($obj->getUrl());
        $obj->setUrl('http://localhost/test');
        $this->assertEquals('http://localhost/test', $obj->getUrl());
    }

    public function testGetSetAddParams()
    {
        $obj =& $this->factory->createRequest();

        $this->assertEquals(array(), $obj->getParams());

        $obj->setParams(array('val1'=>1, 'val2'=>2));
        $this->assertEquals(array('val1'=>1, 'val2'=>2), $obj->getParams());

        $obj->addParams(array('val2'=>20, 'val3'=>30));
        $this->assertEquals(array('val1'=>1, 'val2'=>20, 'val3'=>30), $obj->getParams());
    }

    public function testGetSetRequestMethod()
    {
        $obj =& $this->factory->createRequest();
        $this->assertEquals('GET', $obj->getRequestMethod());
        $obj->setRequestMethod('POST');
        $this->assertEquals('POST', $obj->getRequestMethod());
    }

    public function testSend()
    {
        $obj =& $this->factory->createRequest();

        $res =& $obj->send();
        $this->assertTrue(PEAR::isError($res));

        $obj->setUrl('http://localhost/test');

        $res =& $obj->send();
        $this->assertFalse(PEAR::isError($res));
        $this->assertTrue(($res instanceof <%[$package_name]%>_Response));
    }
}

?>
