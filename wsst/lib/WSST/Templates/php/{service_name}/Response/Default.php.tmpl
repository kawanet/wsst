<?php

[% INCLUDE inc_file_header.tmpl class_name="${package_name}_Response_Default" -%]

require_once 'PEAR.php';
require_once 'XML/Unserializer.php';

[% INCLUDE inc_class_header.tmpl class_title="Default implementation of Response class (using XML_Unserializer)" -%]
class [% package_name %]_Response_Default extends [% package_name %]_Response
{
    /**
     * XML_Unserializer options
     * 
     * @access private
     * @var array
     */
    var $_options = array(XML_UNSERIALIZER_OPTION_COMPLEXTYPE => 'object',
                          XML_UNSERIALIZER_OPTION_ATTRIBUTES_PARSE => true,
                          XML_UNSERIALIZER_OPTION_CONTENT_KEY => '_text');
    
    /**
     *ã€€set XML_Unserializer option
     * 
     * @access public
     * @param string $key option key
     * @param string $val option value
     */
    function setOption($key, $val)
    {
        $this->_option[$key] = $val;
    }

    /**
     * process response data
     * 
     * @access public
     * @param array $conf config
     * @return object PEAR_Error on error, or null.
     */
    function processData($conf = array())
    {
        $options = $this->_options;
        
        if (array_key_exists('force_array', $conf)) {
            $options[XML_UNSERIALIZER_OPTION_FORCE_ENUM]
                = array_key_exists(XML_UNSERIALIZER_OPTION_FORCE_ENUM, $options)
                  && $options[XML_UNSERIALIZER_OPTION_FORCE_ENUM]
                    ? array_merge($options[XML_UNSERIALIZER_OPTION_FORCE_ENUM],
                                  $conf['force_array'])
                    : $conf['force_array'];
        }
    
        $unserializer =& new XML_Unserializer($options);
        
        // remove dust data
        $content = $this->_content;
        $first = strpos($content, '<');
        $last = strrpos($content, '>');
        $content = substr($content, $first, $last - $first + 1);
        
        $status = $unserializer->unserialize($content, false);
        if (PEAR::isError($status)) {
            return $status;
        }
        
        $this->_data = $unserializer->getUnserializedData();
        
        return null;
    }
}

?>
