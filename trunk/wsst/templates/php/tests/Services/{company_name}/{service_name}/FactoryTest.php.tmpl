<?php

/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */

/**
 * Test case for the class "<%[$package_name]%>_Factory"
 *
 * PHP versions 5
<%[ if ($php_license_abstract) {
    $OUT .= " *\n";
    $php_license_abstract =~ s/^\s+//;
    $php_license_abstract =~ s/\s+$//;
    $php_license_abstract =~ s/\n/\n * /g;
    $OUT .= " * LICENSE: $php_license_abstract\n";
} ]%> *
 * @category   Services
 * @package    <%[$package_name]%>
<%[ foreach (@author) {
    $OUT .= " * \@author     $_\n";
} ]%><%[ if ($php_copyright||$copyright) {
    local $copyright = ($php_copyright||$copyright);
    $OUT .= " * \@copyright  $copyright\n";
} ]%> * @license    <%[$php_license_uri]%> <%[$license]%>
 * @version    Release: @package_version@
 * @link       <%[$php_link]%>
 */

require_once 'PEAR.php';
require_once 'PHPUnit/Framework.php';
require_once '<%[$package_dir]%>/Factory.php';
require_once '<%[$package_dir]%>/Request.php';
require_once '<%[$package_dir]%>/Response.php';

/**
 * Test class for <%[$package_name]%>_Factory
 *
 * @category   Services
 * @package    <%[$package_name]%>
<%[ foreach (@author) {
    $OUT .= " * \@author     $_\n";
} ]%><%[ if ($php_copyright||$copyright) {
    local $copyright = ($php_copyright||$copyright);
    $OUT .= " * \@copyright  $copyright\n";
} ]%> * @license    <%[$php_license_uri]%> <%[$license]%>
 * @version    Release: @package_version@
 * @link       <%[$php_link]%>
 */
class <%[$package_name]%>_FactoryTest extends PHPUnit_Framework_TestCase
{
    protected $object;
    
    public function setUp()
    {
        $this->object = new <%[$package_name]%>_Factory();
    }
    
    public function testCreateRequest()
    {
        $req =& $this->object->createRequest();
        $this->assertFalse(PEAR::isError($req), 'PEAR::isError');
        $this->assertTrue(($req instanceof <%[$package_name]%>_Request), 'instanceof');
    }
    
    public function testCreateResponse()
    {
        $res =& $this->object->createResponse();
        $this->assertFalse(PEAR::isError($res), 'PEAR::isError');
        $this->assertTrue(($res instanceof <%[$package_name]%>_Response), 'instanceof');
    }
}

?>
